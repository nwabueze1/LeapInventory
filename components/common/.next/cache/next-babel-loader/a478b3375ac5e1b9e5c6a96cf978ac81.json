{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Container, Table } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport AuthGuard from '../components/Authentification';\nimport Pagination from '../components/common/pagination';\nexport default function Customers() {\n  const {\n    0: customers,\n    1: setCustomers\n  } = useState([]);\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(4);\n  const {\n    0: currentPage,\n    1: setCurrentpage\n  } = useState(1);\n  const router = useRouter();\n  const app = useContext(useFirebase);\n  const firestore = app.firestore();\n\n  const handleDelete = async id => {\n    const deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n    if (deleteConfirm) {\n      //update the state\n      const allCustomers = customers;\n      const filtered = allCustomers.filter(m => m._id !== id);\n      setCustomers(filtered);\n\n      try {\n        await firestore.collection('customers').doc(id).delete();\n      } catch (error) {\n        toast.error('cant perform this operation');\n        setCustomers(allCustomers);\n      } //call the database to delete the customer with the id\n\n\n      toast.success('deleted successfully');\n      console.log(id);\n    }\n  };\n\n  const handleEdit = id => {\n    // router.push(`customersForm/${id}`);\n    //find the customer with the give id and edit\n    console.log(id);\n  };\n\n  const handlePageChange = page => {\n    console.log(page);\n  };\n\n  useEffect(() => {\n    async function getCustomers() {\n      const citiesRef = firestore.collection('customers');\n      const snapshot = await citiesRef.get();\n      const customers = [];\n      snapshot.forEach(doc => {\n        let currentId = doc.id;\n\n        let appObj = _objectSpread(_objectSpread({}, doc.data()), {}, {\n          ['_id']: currentId\n        });\n\n        customers.push(appObj);\n        console.log(customers);\n      });\n      setCustomers(customers);\n    }\n\n    getCustomers();\n  }, []);\n  return __jsx(AuthGuard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, \"Customers\", __jsx(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: () => router.push('/customersForm'),\n    className: \"btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, \"Add\"))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 8\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }, \"S/N\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"person\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"mail\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"address\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"contact_phone\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"add\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"delete\")))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }\n  }, customers.map((customer, index) => __jsx(\"tr\", {\n    key: customer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, index + 1), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, customer.name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, customer.email), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, customer.address), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, customer.phone), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: () => handleEdit(customer._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }\n  }, \"Edit\")), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    onClick: () => handleDelete(customer._id),\n    className: \"btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }\n  }, \"Delete\")))))), __jsx(Pagination, {\n    itemsCount: customers.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    onPageChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  })), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Button","Card","Container","Table","useFirebase","useRouter","toast","ToastContainer","AuthGuard","Pagination","Customers","customers","setCustomers","pageSize","setPageSize","currentPage","setCurrentpage","router","app","firestore","handleDelete","id","deleteConfirm","confirm","allCustomers","filtered","filter","m","_id","collection","doc","delete","error","success","console","log","handleEdit","handlePageChange","page","getCustomers","citiesRef","snapshot","get","forEach","currentId","appObj","data","push","map","customer","index","name","email","address","phone","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Accordion, Button, Card, Container, FormControl, InputGroup, Spinner, Table } from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport AuthGuard from '../components/Authentification';\r\nimport Pagination from '../components/common/pagination';\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: any;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [pageSize, setPageSize] = useState(4);\r\n\tconst [currentPage, setCurrentpage] = useState(1);\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m._id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (id: string) => {\r\n\t\t// router.push(`customersForm/${id}`);\r\n\t\t//find the customer with the give id and edit\r\n\t\tconsole.log(id);\r\n\t};\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tconsole.log(page);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tlet currentId = doc.id;\r\n\t\t\t\tlet appObj = { ...doc.data(), ['_id']: currentId };\r\n\t\t\t\tcustomers.push(appObj as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\treturn (\r\n\t\t<AuthGuard>\r\n\t\t\t<Container>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\tCustomers\r\n\t\t\t\t\t\t<span className=\"float-right\">\r\n\t\t\t\t\t\t\t<Button onClick={() => router.push('/customersForm')} className=\"btn-info\">\r\n\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Table striped bordered hover>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>S/N</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">person</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">mail</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">address</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">contact_phone</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">add</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">delete</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{customers.map((customer, index) => (\r\n\t\t\t\t\t\t\t\t\t<tr key={customer.id}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{customer.name}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<td>{customer.email}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{customer.address}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{customer.phone}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => handleEdit(customer._id)}>Edit</Button>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button onClick={() => handleDelete(customer._id)} className=\"btn-danger\">\r\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\titemsCount={customers.length}\r\n\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t></Pagination>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t<ToastContainer></ToastContainer>\r\n\t\t\t\t</Card>\r\n\t\t\t</Container>\r\n\t\t</AuthGuard>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}