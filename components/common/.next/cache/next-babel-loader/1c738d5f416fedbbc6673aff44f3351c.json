{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\components\\\\Authentification.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport FirebaseContext from './useFirebase';\nimport { useRouter } from 'next/router';\nimport ScreenLoader from './ScreenLoader';\nexport default function AuthGuard(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var router = useRouter();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var app = useContext(FirebaseContext);\n  var auth = app.auth();\n  useEffect(function () {\n    var observable = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        // free screen to render\n        setUser(auth.currentUser);\n      } else {\n        // navigate else where\n        router.push('/');\n      }\n    });\n    return function () {\n      observable();\n    };\n  });\n  return __jsx(React.Fragment, null, !user ? __jsx(ScreenLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }) : children);\n}\n\n_s(AuthGuard, \"2cuv15YVp538jqkdJReNh8gPCrg=\", false, function () {\n  return [useRouter];\n});\n\n_c = AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/components/Authentification.tsx"],"names":["React","useContext","useEffect","useState","FirebaseContext","useRouter","ScreenLoader","AuthGuard","children","router","user","setUser","app","auth","observable","onAuthStateChanged","currentUser","push"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAMA,eAAe,SAASC,SAAT,OAA6D;AAAA;;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAC3E,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD2E,kBAEnDF,QAAQ,CAAuB,IAAvB,CAF2C;AAAA,MAEpEO,IAFoE;AAAA,MAE9DC,OAF8D;;AAG3E,MAAMC,GAAG,GAAGX,UAAU,CAACG,eAAD,CAAtB;AACA,MAAMS,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACAX,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMY,UAAU,GAAGD,IAAI,CAACE,kBAAL,CAAwB,UAAUL,IAAV,EAAgB;AAC1D,UAAIA,IAAJ,EAAU;AACT;AACAC,QAAAA,OAAO,CAACE,IAAI,CAACG,WAAN,CAAP;AACA,OAHD,MAGO;AACN;AACAP,QAAAA,MAAM,CAACQ,IAAP,CAAY,GAAZ;AACA;AACD,KARkB,CAAnB;AASA,WAAO,YAAY;AAClBH,MAAAA,UAAU;AACV,KAFD;AAGA,GAbQ,CAAT;AAcA,SAAO,4BAAG,CAACJ,IAAD,GAAQ,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,GAA2BF,QAA9B,CAAP;AACA;;GApBuBD,S;UACRF,S;;;KADQE,S","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport FirebaseContext from './useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport ScreenLoader from './ScreenLoader';\r\n\r\ninterface AuthGuardProp {\r\n\tchildren: Array<JSX.Element> | JSX.Element;\r\n}\r\n\r\nexport default function AuthGuard({ children }: AuthGuardProp): JSX.Element {\r\n\tconst router = useRouter();\r\n\tconst [user, setUser] = useState<firebase.User | null>(null);\r\n\tconst app = useContext(FirebaseContext);\r\n\tconst auth = app.auth();\r\n\tuseEffect(() => {\r\n\t\tconst observable = auth.onAuthStateChanged(function (user) {\r\n\t\t\tif (user) {\r\n\t\t\t\t// free screen to render\r\n\t\t\t\tsetUser(auth.currentUser);\r\n\t\t\t} else {\r\n\t\t\t\t// navigate else where\r\n\t\t\t\trouter.push('/');\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn function () {\r\n\t\t\tobservable();\r\n\t\t};\r\n\t});\r\n\treturn <>{!user ? <ScreenLoader /> : children}</>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}