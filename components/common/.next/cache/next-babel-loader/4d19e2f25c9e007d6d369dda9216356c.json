{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Col, Container, Row } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport AuthGuard from '../components/Authentification';\nimport Pagination from '../components/common/pagination';\nimport { paginate } from '../components/utils/paginate';\nimport CustomersTable from '../components/customersTable';\n\nvar _ = require('lodash');\n\nexport default function Customers() {\n  _s();\n\n  var _useState = useState([]),\n      customers = _useState[0],\n      setCustomers = _useState[1];\n\n  var _useState2 = useState(4),\n      pageSize = _useState2[0],\n      setPageSize = _useState2[1];\n\n  var _useState3 = useState(1),\n      currentPage = _useState3[0],\n      setCurrentpage = _useState3[1];\n\n  var _useState4 = useState({\n    path: 'title',\n    order: 'asc'\n  }),\n      sortColumns = _useState4[0],\n      setSortColumn = _useState4[1];\n\n  var router = useRouter();\n  var app = useContext(useFirebase);\n  var firestore = app.firestore();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var deleteConfirm, allCustomers, filtered;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n              if (!deleteConfirm) {\n                _context.next = 16;\n                break;\n              }\n\n              //update the state\n              allCustomers = customers;\n              filtered = allCustomers.filter(function (m) {\n                return m._id !== id;\n              });\n              setCustomers(filtered);\n              _context.prev = 5;\n              _context.next = 8;\n              return firestore.collection('customers').doc(id)[\"delete\"]();\n\n            case 8:\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](5);\n              toast.error('cant perform this operation');\n              setCustomers(allCustomers);\n\n            case 14:\n              //call the database to delete the customer with the id\n              toast.success('deleted successfully');\n              console.log(id);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 10]]);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleEdit = function handleEdit(customer) {\n    // router.push(`customersForm/${id}`);\n    //find the customer with the give id and edit\n    console.log(customer);\n  };\n\n  var handlePageChange = function handlePageChange(page) {\n    setCurrentpage(page);\n  };\n\n  var handleSort = function handleSort(path) {\n    var sortColumn = _objectSpread({}, sortColumns);\n\n    if (sortColumn.path === path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';else {\n      sortColumn.path = path;\n      sortColumn.order = 'asc';\n    }\n    setSortColumn(sortColumn);\n  };\n\n  useEffect(function () {\n    function getCustomers() {\n      return _getCustomers.apply(this, arguments);\n    }\n\n    function _getCustomers() {\n      _getCustomers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var citiesRef, snapshot, customers;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                citiesRef = firestore.collection('customers');\n                _context2.next = 3;\n                return citiesRef.get();\n\n              case 3:\n                snapshot = _context2.sent;\n                customers = [];\n                snapshot.forEach(function (doc) {\n                  var currentId = doc.id;\n\n                  var appObj = _objectSpread(_objectSpread({}, doc.data()), {}, _defineProperty({}, '_id', currentId));\n\n                  customers.push(appObj);\n                  console.log(customers);\n                });\n                setCustomers(customers);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getCustomers.apply(this, arguments);\n    }\n\n    getCustomers();\n  }, []);\n\n  var sorted = _.orderBy(customers, [sortColumns.path], [sortColumns.order]);\n\n  var paginatedCustomers = paginate(sorted, currentPage, pageSize);\n  return __jsx(AuthGuard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    lg: 4,\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Customers\")))), __jsx(Col, {\n    lg: 8,\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 8\n    }\n  }, \"Customers\", __jsx(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return router.push('/customersForm');\n    },\n    className: \"btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }\n  }, \"Add\"))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 8\n    }\n  }, __jsx(CustomersTable, {\n    customersPaginate: paginatedCustomers,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    onSort: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), __jsx(Pagination, {\n    itemsCount: customers.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    onPageChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 8\n    }\n  }))))));\n}\n\n_s(Customers, \"QzC/QpqPK9zQWBaCyatB9znemyI=\", false, function () {\n  return [useRouter];\n});\n\n_c = Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Button","Card","Col","Container","Row","useFirebase","useRouter","toast","ToastContainer","AuthGuard","Pagination","paginate","CustomersTable","_","require","Customers","customers","setCustomers","pageSize","setPageSize","currentPage","setCurrentpage","path","order","sortColumns","setSortColumn","router","app","firestore","handleDelete","id","deleteConfirm","confirm","allCustomers","filtered","filter","m","_id","collection","doc","error","success","console","log","handleEdit","customer","handlePageChange","page","handleSort","sortColumn","getCustomers","citiesRef","get","snapshot","forEach","currentId","appObj","data","push","sorted","orderBy","paginatedCustomers","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, Card, Col, Container, FormControl, InputGroup, Row, Spinner, Table } from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport AuthGuard from '../components/Authentification';\r\nimport Pagination from '../components/common/pagination';\r\nimport { paginate } from '../components/utils/paginate';\r\nimport CustomersTable from '../components/customersTable';\r\nconst _ = require('lodash');\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: any;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [pageSize, setPageSize] = useState(4);\r\n\tconst [currentPage, setCurrentpage] = useState(1);\r\n\tconst [sortColumns, setSortColumn] = useState({ path: 'title', order: 'asc' });\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m._id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (customer: Customers) => {\r\n\t\t// router.push(`customersForm/${id}`);\r\n\t\t//find the customer with the give id and edit\r\n\t\tconsole.log(customer);\r\n\t};\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetCurrentpage(page);\r\n\t};\r\n\tconst handleSort = (path: string) => {\r\n\t\tconst sortColumn = { ...sortColumns };\r\n\t\tif (sortColumn.path === path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n\t\telse {\r\n\t\t\tsortColumn.path = path;\r\n\t\t\tsortColumn.order = 'asc';\r\n\t\t}\r\n\t\tsetSortColumn(sortColumn);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tlet currentId = doc.id;\r\n\t\t\t\tlet appObj = { ...doc.data(), ['_id']: currentId };\r\n\t\t\t\tcustomers.push(appObj as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\r\n\tconst sorted = _.orderBy(customers, [sortColumns.path], [sortColumns.order]);\r\n\tconst paginatedCustomers = paginate(sorted, currentPage, pageSize);\r\n\treturn (\r\n\t\t<AuthGuard>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={4} className=\"float-left\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t<h5>Customers</h5>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={8} className=\"float-right\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\tCustomers\r\n\t\t\t\t\t\t\t\t<span className=\"float-right\">\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => router.push('/customersForm')} className=\"btn-info\">\r\n\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<CustomersTable\r\n\t\t\t\t\t\t\t\t\tcustomersPaginate={paginatedCustomers}\r\n\t\t\t\t\t\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\t\t\t\t\t\tonEdit={handleEdit}\r\n\t\t\t\t\t\t\t\t\tonSort={handleSort}\r\n\t\t\t\t\t\t\t\t></CustomersTable>\r\n\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\titemsCount={customers.length}\r\n\t\t\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t></Pagination>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<ToastContainer></ToastContainer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</AuthGuard>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}