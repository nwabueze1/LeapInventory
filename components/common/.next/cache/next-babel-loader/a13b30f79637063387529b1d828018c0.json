{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Accordion, Button, Card, Container, FormControl, InputGroup, Spinner, Table } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nexport default function Customers() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      customers = _useState[0],\n      setCustomers = _useState[1];\n\n  var _useState2 = useState(''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(''),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(''),\n      address = _useState5[0],\n      setAddress = _useState5[1];\n\n  var _useState6 = useState(false),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var router = useRouter();\n  var app = useContext(useFirebase);\n  var firestore = app.firestore();\n\n  var AddCustomer = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var now, newCustomer, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(name.length < 5)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", toast.error('customer name must be grater that 5 characters'));\n\n            case 2:\n              if (!(email.length < 7)) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", toast.error('customer email must be grater that 7 characters'));\n\n            case 4:\n              if (!(address.length < 5)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", toast.error('customer address must be grater that 5 characters'));\n\n            case 6:\n              if (!(phone.length < 7)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", toast.error('customer phone number must be grater that 7 characters'));\n\n            case 8:\n              if (!(name.length > 100 || email.length > 50 || address.length > 100 || phone.length > 20)) {\n                _context.next = 10;\n                break;\n              }\n\n              return _context.abrupt(\"return\", toast.error('Invalid Request'));\n\n            case 10:\n              setLoading(true);\n              now = Date.now();\n              newCustomer = {\n                id: \"\".concat(now),\n                name: name,\n                email: email,\n                phone: phone,\n                address: address,\n                type: 'One-off'\n              };\n              _context.prev = 13;\n              _context.next = 16;\n              return firestore.collection('customers').add(newCustomer);\n\n            case 16:\n              res = _context.sent;\n              toast.success('customer added to the database');\n              setLoading(false);\n              console.log(res);\n              router.reload();\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](13);\n              toast.error('Cant connect to database now');\n\n            case 26:\n              setLoading(false); //call the backend to add the customer\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[13, 23]]);\n    }));\n\n    return function AddCustomer() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var deleteConfirm, allCustomers, filtered;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n              if (!deleteConfirm) {\n                _context2.next = 16;\n                break;\n              }\n\n              //update the state\n              allCustomers = customers;\n              filtered = allCustomers.filter(function (m) {\n                return m.id !== id;\n              });\n              setCustomers(filtered);\n              _context2.prev = 5;\n              _context2.next = 8;\n              return firestore.collection('customers').doc(id)[\"delete\"]();\n\n            case 8:\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](5);\n              toast.error('cant perform this operation');\n              setCustomers(allCustomers);\n\n            case 14:\n              //call the database to delete the customer with the id\n              toast.success('deleted successfully');\n              console.log(id);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 10]]);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleEdit = function handleEdit(id) {\n    //find the customer with the give id and edit\n    console.log(id);\n  };\n\n  useEffect(function () {\n    function getCustomers() {\n      return _getCustomers.apply(this, arguments);\n    }\n\n    function _getCustomers() {\n      _getCustomers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var citiesRef, snapshot, customers;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                citiesRef = firestore.collection('customers');\n                _context3.next = 3;\n                return citiesRef.get();\n\n              case 3:\n                snapshot = _context3.sent;\n                customers = [];\n                snapshot.forEach(function (doc) {\n                  customers.push(doc.data());\n                  console.log(customers);\n                });\n                setCustomers(customers);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _getCustomers.apply(this, arguments);\n    }\n\n    getCustomers();\n  }, []);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    className: \"pa-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, \"Customers_table\"), __jsx(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }\n  }, __jsx(Accordion.Toggle, {\n    className: \"float-right btn btn-info m-2\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"NEW CUSTOMER\"), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 8\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Details\")), __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Customers name..\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  }), __jsx(FormControl, {\n    type: \"email\",\n    placeholder: \"Customers Email\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  }), __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Customers address\",\n    value: address,\n    onChange: function onChange(e) {\n      return setAddress(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }\n  }), __jsx(FormControl, {\n    type: \"tel\",\n    placeholder: \"phone Number\",\n    value: phone,\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }\n  }), __jsx(Button, {\n    className: \"ml-2\",\n    onClick: AddCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  }, loading ? __jsx(Spinner, {\n    animation: \"border\",\n    variant: \"ligth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 22\n    }\n  }) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 71\n    }\n  }, \"Add\"))))))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 8\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }\n  }, \"person\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 10\n    }\n  }, \"email\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }\n  }, \"location\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 10\n    }\n  }, \"contact_phone\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 10\n    }\n  }, \"add\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 10\n    }\n  }, \"delete\")))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, customers.map(function (customer) {\n    return __jsx(\"tr\", {\n      key: customer.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 10\n      }\n    }, customer.name), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 10\n      }\n    }, customer.email), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 10\n      }\n    }, customer.address), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 10\n      }\n    }, customer.phone), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 10\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return handleEdit(customer.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"Edit\")), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 10\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return handleDelete(customer.id);\n      },\n      className: \"btn-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n  }))))), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }\n  }));\n}\n\n_s(Customers, \"67ivNwCqdnFMX29kxVQ6OW48IQs=\", false, function () {\n  return [useRouter];\n});\n\n_c = Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Accordion","Button","Card","Container","FormControl","InputGroup","Spinner","Table","useFirebase","useRouter","toast","ToastContainer","Customers","customers","setCustomers","name","setName","email","setEmail","phone","setPhone","address","setAddress","loading","setLoading","router","app","firestore","AddCustomer","length","error","now","Date","newCustomer","id","type","collection","add","res","success","console","log","reload","handleDelete","deleteConfirm","confirm","allCustomers","filtered","filter","m","doc","handleEdit","getCustomers","citiesRef","get","snapshot","forEach","push","data","e","target","value","map","customer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Accordion, Button, Card, Container, FormControl, InputGroup, Spinner, Table } from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: string;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst AddCustomer = async () => {\r\n\t\tif (name.length < 5) return toast.error('customer name must be grater that 5 characters');\r\n\t\tif (email.length < 7) return toast.error('customer email must be grater that 7 characters');\r\n\t\tif (address.length < 5) return toast.error('customer address must be grater that 5 characters');\r\n\t\tif (phone.length < 7) return toast.error('customer phone number must be grater that 7 characters');\r\n\t\tif (name.length > 100 || email.length > 50 || address.length > 100 || phone.length > 20)\r\n\t\t\treturn toast.error('Invalid Request');\r\n\t\tsetLoading(true);\r\n\t\tconst now = Date.now();\r\n\t\tconst newCustomer: Customers = {\r\n\t\t\tid: `${now}`,\r\n\t\t\tname: name,\r\n\t\t\temail: email,\r\n\t\t\tphone: phone,\r\n\t\t\taddress: address,\r\n\t\t\ttype: 'One-off',\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst res = await firestore.collection('customers').add(newCustomer);\r\n\r\n\t\t\ttoast.success('customer added to the database');\r\n\t\t\tsetLoading(false);\r\n\t\t\tconsole.log(res);\r\n\t\t\trouter.reload();\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error('Cant connect to database now');\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\t//call the backend to add the customer\r\n\t};\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m.id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (id: string) => {\r\n\t\t//find the customer with the give id and edit\r\n\t\tconsole.log(id);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tcustomers.push(doc.data() as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Card className=\"pa-2\">\r\n\t\t\t\t<Card.Header>\r\n\t\t\t\t\t<span className=\"material-icons\">Customers_table</span>\r\n\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t\t<Accordion.Toggle className=\"float-right btn btn-info m-2\" eventKey=\"0\">\r\n\t\t\t\t\t\t\tNEW CUSTOMER\r\n\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>Details</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Customers name..\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Customers Email\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Customers address\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"phone Number\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button className=\"ml-2\" onClick={AddCustomer}>\r\n\t\t\t\t\t\t\t\t\t\t{loading ? <Spinner animation=\"border\" variant=\"ligth\" /> : <span>Add</span>}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Table striped bordered hover>\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">person</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">email</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">location</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">contact_phone</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">add</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t\t<span className=\"material-icons\">delete</span>\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{customers.map((customer) => (\r\n\t\t\t\t\t\t\t\t<tr key={customer.id}>\r\n\t\t\t\t\t\t\t\t\t<td>{customer.name}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>{customer.email}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customer.address}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{customer.phone}</td>\r\n\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => handleEdit(customer.id)}>Edit</Button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={() => handleDelete(customer.id)} className=\"btn-danger\">\r\n\t\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t\t<ToastContainer></ToastContainer>\r\n\t\t</Container>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}