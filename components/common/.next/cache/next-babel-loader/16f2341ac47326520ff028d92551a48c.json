{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Col, Container, Form, FormGroup, Row, Spinner } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport AuthGuard from '../components/Authentification';\nimport Pagination from '../components/common/pagination';\nimport { paginate } from '../components/utils/paginate';\nimport CustomersTable from '../components/customersTable';\n\nvar _ = require('lodash');\n\nexport default function Customers() {\n  _s();\n\n  var _useState = useState([]),\n      customers = _useState[0],\n      setCustomers = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(''),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      phone = _useState5[0],\n      setPhone = _useState5[1];\n\n  var _useState6 = useState(''),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(''),\n      id = _useState7[0],\n      setId = _useState7[1];\n\n  var _useState8 = useState(10),\n      pageSize = _useState8[0],\n      setPageSize = _useState8[1];\n\n  var _useState9 = useState(1),\n      currentPage = _useState9[0],\n      setCurrentpage = _useState9[1];\n\n  var _useState10 = useState({\n    path: 'title',\n    order: 'asc'\n  }),\n      sortColumns = _useState10[0],\n      setSortColumn = _useState10[1];\n\n  var router = useRouter();\n  var app = useContext(useFirebase);\n  var firestore = app.firestore();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var deleteConfirm, allCustomers, filtered;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n              if (!deleteConfirm) {\n                _context.next = 16;\n                break;\n              }\n\n              //update the state\n              allCustomers = customers;\n              filtered = allCustomers.filter(function (m) {\n                return m._id !== id;\n              });\n              setCustomers(filtered);\n              _context.prev = 5;\n              _context.next = 8;\n              return firestore.collection('customers').doc(id)[\"delete\"]();\n\n            case 8:\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](5);\n              toast.error('cant perform this operation');\n              setCustomers(allCustomers);\n\n            case 14:\n              //call the database to delete the customer with the id\n              toast.success('deleted successfully');\n              console.log(id);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 10]]);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleEdit = function handleEdit(customer) {\n    setName(customer.name);\n    setEmail(customer.email);\n    setPhone(customer.phone);\n    setAddress(customer.address);\n    setId(customer._id);\n  };\n\n  var handlePageChange = function handlePageChange(page) {\n    setCurrentpage(page);\n  };\n\n  var handleSort = function handleSort(path) {\n    var sortColumn = _objectSpread({}, sortColumns);\n\n    if (sortColumn.path === path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';else {\n      sortColumn.path = path;\n      sortColumn.order = 'asc';\n    }\n    setSortColumn(sortColumn);\n  };\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var updatedCustomers, allCustomers;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(name.length < 5 || email.length < 5)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", toast.error('Name and Email must be greater than 5 character'));\n\n            case 2:\n              if (!(address.length < 5 || phone.length < 5)) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", toast.error('Address and Phone number must be greater than 5 characters'));\n\n            case 4:\n              setLoading(true);\n              _context2.prev = 5;\n              _context2.next = 8;\n              return firestore.collection('customers').doc(id).update({\n                name: name,\n                email: email,\n                address: address,\n                phone: phone\n              });\n\n            case 8:\n              updatedCustomers = _context2.sent;\n              toast.success('Updated successfully');\n              allCustomers = _objectSpread(_objectSpread({}, customers), {}, {\n                updatedCustomers: updatedCustomers\n              });\n              setCustomers(allCustomers);\n              setLoading(false);\n              router.reload();\n              _context2.next = 20;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](5);\n              return _context2.abrupt(\"return\", toast.error(\"Can't connect with database for now\"));\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 16]]);\n    }));\n\n    return function handleUpdate(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    function getCustomers() {\n      return _getCustomers.apply(this, arguments);\n    }\n\n    function _getCustomers() {\n      _getCustomers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var citiesRef, snapshot, customers;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                citiesRef = firestore.collection('customers');\n                _context3.next = 3;\n                return citiesRef.get();\n\n              case 3:\n                snapshot = _context3.sent;\n                customers = [];\n                snapshot.forEach(function (doc) {\n                  var currentId = doc.id;\n\n                  var appObj = _objectSpread(_objectSpread({}, doc.data()), {}, _defineProperty({}, '_id', currentId));\n\n                  customers.push(appObj);\n                  console.log(customers);\n                });\n                setCustomers(customers);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n      return _getCustomers.apply(this, arguments);\n    }\n\n    getCustomers();\n  }, []);\n\n  var sorted = _.orderBy(customers, [sortColumns.path], [sortColumns.order]);\n\n  var paginatedCustomers = paginate(sorted, currentPage, pageSize);\n  return __jsx(AuthGuard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    className: \"pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    lg: 4,\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    className: \"pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 8\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Edit Customers\")), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 8\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"name...\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Email\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"email...\",\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Address\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"address...\",\n    value: address,\n    onChange: function onChange(e) {\n      return setAddress(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"contact...\",\n    value: phone,\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 10\n    }\n  }, __jsx(Button, {\n    className: \"btn-secondary\",\n    onClick: function onClick() {\n      return handleUpdate(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, !loading ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Update\") : __jsx(React.Fragment, null, __jsx(Spinner, {\n    as: \"span\",\n    animation: \"border\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 14\n    }\n  }), __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 14\n    }\n  }, \"Updating...\")))))))), __jsx(Col, {\n    lg: 8,\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 8\n    }\n  }, \"Customers\", __jsx(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"big material-icons\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      return router.push('/customersForm');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 10\n    }\n  }, \"add_box\"))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 8\n    }\n  }, __jsx(CustomersTable, {\n    customersPaginate: paginatedCustomers,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    onSort: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }), __jsx(Pagination, {\n    itemsCount: customers.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    onPageChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  })), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 8\n    }\n  }))))));\n}\n\n_s(Customers, \"mMElz47YIZX+b1xI0R1bLFLiBVI=\", false, function () {\n  return [useRouter];\n});\n\n_c = Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Button","Card","Col","Container","Form","FormGroup","Row","Spinner","useFirebase","useRouter","toast","ToastContainer","AuthGuard","Pagination","paginate","CustomersTable","_","require","Customers","customers","setCustomers","loading","setLoading","name","setName","email","setEmail","phone","setPhone","address","setAddress","id","setId","pageSize","setPageSize","currentPage","setCurrentpage","path","order","sortColumns","setSortColumn","router","app","firestore","handleDelete","deleteConfirm","confirm","allCustomers","filtered","filter","m","_id","collection","doc","error","success","console","log","handleEdit","customer","handlePageChange","page","handleSort","sortColumn","handleUpdate","length","update","updatedCustomers","reload","getCustomers","citiesRef","get","snapshot","forEach","currentId","appObj","data","push","sorted","orderBy","paginatedCustomers","e","target","value","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tContainer,\r\n\tForm,\r\n\tFormControl,\r\n\tFormGroup,\r\n\tInputGroup,\r\n\tRow,\r\n\tSpinner,\r\n\tTable,\r\n} from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport AuthGuard from '../components/Authentification';\r\nimport Pagination from '../components/common/pagination';\r\nimport { paginate } from '../components/utils/paginate';\r\nimport CustomersTable from '../components/customersTable';\r\nconst _ = require('lodash');\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: any;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [id, setId] = useState('');\r\n\tconst [pageSize, setPageSize] = useState(10);\r\n\tconst [currentPage, setCurrentpage] = useState(1);\r\n\tconst [sortColumns, setSortColumn] = useState({ path: 'title', order: 'asc' });\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m._id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (customer: Customers) => {\r\n\t\tsetName(customer.name);\r\n\t\tsetEmail(customer.email);\r\n\t\tsetPhone(customer.phone);\r\n\t\tsetAddress(customer.address);\r\n\t\tsetId(customer._id);\r\n\t};\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetCurrentpage(page);\r\n\t};\r\n\tconst handleSort = (path: string) => {\r\n\t\tconst sortColumn = { ...sortColumns };\r\n\t\tif (sortColumn.path === path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n\t\telse {\r\n\t\t\tsortColumn.path = path;\r\n\t\t\tsortColumn.order = 'asc';\r\n\t\t}\r\n\t\tsetSortColumn(sortColumn);\r\n\t};\r\n\tconst handleUpdate = async (id: string) => {\r\n\t\tif (name.length < 5 || email.length < 5) return toast.error('Name and Email must be greater than 5 character');\r\n\t\tif (address.length < 5 || phone.length < 5)\r\n\t\t\treturn toast.error('Address and Phone number must be greater than 5 characters');\r\n\t\tsetLoading(true);\r\n\t\ttry {\r\n\t\t\tconst updatedCustomers = await firestore\r\n\t\t\t\t.collection('customers')\r\n\t\t\t\t.doc(id)\r\n\t\t\t\t.update({ name: name, email: email, address: address, phone: phone });\r\n\t\t\ttoast.success('Updated successfully');\r\n\t\t\tconst allCustomers = { ...customers, updatedCustomers };\r\n\t\t\tsetCustomers(allCustomers);\r\n\t\t\tsetLoading(false);\r\n\t\t\trouter.reload();\r\n\t\t} catch (e) {\r\n\t\t\treturn toast.error(\"Can't connect with database for now\");\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tlet currentId = doc.id;\r\n\t\t\t\tlet appObj = { ...doc.data(), ['_id']: currentId };\r\n\t\t\t\tcustomers.push(appObj as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\r\n\tconst sorted = _.orderBy(customers, [sortColumns.path], [sortColumns.order]);\r\n\tconst paginatedCustomers = paginate(sorted, currentPage, pageSize);\r\n\treturn (\r\n\t\t<AuthGuard>\r\n\t\t\t<Container className=\"pl-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={4} className=\"float-left\">\r\n\t\t\t\t\t\t<Card className=\"pr-1\">\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t<h5>Edit Customers</h5>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"email...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"address...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Phone</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"contact...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"btn-secondary\" onClick={() => handleUpdate(id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t{!loading ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Update</span>\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">Updating...</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={8} className=\"float-right\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\tCustomers\r\n\t\t\t\t\t\t\t\t<span className=\"float-right\">\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"big material-icons\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => router.push('/customersForm')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tadd_box\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<CustomersTable\r\n\t\t\t\t\t\t\t\t\tcustomersPaginate={paginatedCustomers}\r\n\t\t\t\t\t\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\t\t\t\t\t\tonEdit={handleEdit}\r\n\t\t\t\t\t\t\t\t\tonSort={handleSort}\r\n\t\t\t\t\t\t\t\t></CustomersTable>\r\n\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\titemsCount={customers.length}\r\n\t\t\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t></Pagination>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<ToastContainer></ToastContainer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</AuthGuard>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}