{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Accordion, Button, Card, FormControl, InputGroup, Spinner, Table } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nexport default function Customers() {\n  const {\n    0: customers,\n    1: setCustomers\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('');\n  const {\n    0: address,\n    1: setAddress\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const app = useContext(useFirebase);\n  const firestore = app.firestore();\n\n  const AddCustomer = async () => {\n    if (name.length < 5) return toast.error('customer name must be grater that 5 characters');\n    if (email.length < 7) return toast.error('customer email must be grater that 7 characters');\n    if (address.length < 5) return toast.error('customer address must be grater that 5 characters');\n    if (phone.length < 7) return toast.error('customer phone number must be grater that 7 characters');\n    if (name.length > 100 || email.length > 50 || address.length > 100 || phone.length > 20) return toast.error('Invalid Request');\n    setLoading(true);\n    const now = Date.now();\n    const newCustomer = {\n      id: `${now}`,\n      name: name,\n      email: email,\n      phone: phone,\n      address: address,\n      type: 'One-off'\n    };\n\n    try {\n      const res = await firestore.collection('customers').add(newCustomer);\n      toast.success('customer added to the database');\n      setLoading(false);\n      console.log(res);\n      router.reload();\n    } catch (error) {\n      toast.error('Cant connect to database now');\n    }\n\n    setLoading(false); //call the backend to add the customer\n  };\n\n  const handleDelete = async id => {\n    const deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n    if (deleteConfirm) {\n      //update the state\n      const allCustomers = customers;\n      const filtered = allCustomers.filter(m => m._id !== id);\n      setCustomers(filtered);\n\n      try {\n        await firestore.collection('customers').doc(id).delete();\n      } catch (error) {\n        toast.error('cant perform this operation');\n        setCustomers(allCustomers);\n      } //call the database to delete the customer with the id\n\n\n      toast.success('deleted successfully');\n      console.log(id);\n    }\n  };\n\n  const handleEdit = id => {\n    //find the customer with the give id and edit\n    console.log(id);\n  };\n\n  useEffect(() => {\n    async function getCustomers() {\n      const citiesRef = firestore.collection('customers');\n      const snapshot = await citiesRef.get();\n      const customers = [];\n      snapshot.forEach(doc => {\n        let currentId = doc.id;\n\n        let appObj = _objectSpread(_objectSpread({}, doc.data()), {}, {\n          ['_id']: currentId\n        });\n\n        customers.push(appObj);\n        console.log(customers);\n      });\n      setCustomers(customers);\n    }\n\n    getCustomers();\n  }, []);\n  return __jsx(Card, {\n    className: \"pa-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Customers\"), __jsx(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, __jsx(Accordion.Toggle, {\n    className: \"float-right btn btn-primary m-2\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, \"ADD\"), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }\n  }, __jsx(InputGroup.Prepend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(InputGroup.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }\n  }, \"Details\")), __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Customers name..\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), __jsx(FormControl, {\n    type: \"email\",\n    placeholder: \"Customers Email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), __jsx(FormControl, {\n    type: \"text\",\n    placeholder: \"Customers address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), __jsx(FormControl, {\n    type: \"tel\",\n    placeholder: \"phone Number\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    className: \"ml-2\",\n    onClick: AddCustomer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, loading ? __jsx(Spinner, {\n    animation: \"border\",\n    variant: \"ligth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }) : __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 70\n    }\n  }, \"Add\"))))))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 6\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 8\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"person\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 8\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, \"email\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 8\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"location\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 8\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"contact_phone\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 8\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, \"add\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 8\n    }\n  }, __jsx(\"span\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"delete\")))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }\n  }, customers.map(customer => __jsx(\"tr\", {\n    key: customer.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 8\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, customer.name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, customer.email), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, customer.address), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, customer.phone), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => handleEdit(customer._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 10\n    }\n  }, \"Edit\")), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => handleDelete(customer._id),\n    className: \"btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 10\n    }\n  }, \"Delete\"))))))), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Accordion","Button","Card","FormControl","InputGroup","Spinner","Table","useFirebase","useRouter","toast","ToastContainer","Customers","customers","setCustomers","name","setName","email","setEmail","phone","setPhone","address","setAddress","loading","setLoading","router","app","firestore","AddCustomer","length","error","now","Date","newCustomer","id","type","res","collection","add","success","console","log","reload","handleDelete","deleteConfirm","confirm","allCustomers","filtered","filter","m","_id","doc","delete","handleEdit","getCustomers","citiesRef","snapshot","get","forEach","currentId","appObj","data","push","e","target","value","map","customer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Accordion, Button, Card, Container, FormControl, InputGroup, Spinner, Table } from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: any;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst AddCustomer = async () => {\r\n\t\tif (name.length < 5) return toast.error('customer name must be grater that 5 characters');\r\n\t\tif (email.length < 7) return toast.error('customer email must be grater that 7 characters');\r\n\t\tif (address.length < 5) return toast.error('customer address must be grater that 5 characters');\r\n\t\tif (phone.length < 7) return toast.error('customer phone number must be grater that 7 characters');\r\n\t\tif (name.length > 100 || email.length > 50 || address.length > 100 || phone.length > 20)\r\n\t\t\treturn toast.error('Invalid Request');\r\n\t\tsetLoading(true);\r\n\t\tconst now = Date.now();\r\n\t\tconst newCustomer: Customers = {\r\n\t\t\tid: `${now}`,\r\n\t\t\tname: name,\r\n\t\t\temail: email,\r\n\t\t\tphone: phone,\r\n\t\t\taddress: address,\r\n\t\t\ttype: 'One-off',\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst res = await firestore.collection('customers').add(newCustomer);\r\n\r\n\t\t\ttoast.success('customer added to the database');\r\n\t\t\tsetLoading(false);\r\n\t\t\tconsole.log(res);\r\n\t\t\trouter.reload();\r\n\t\t} catch (error) {\r\n\t\t\ttoast.error('Cant connect to database now');\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t\t//call the backend to add the customer\r\n\t};\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m._id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (id: string) => {\r\n\t\t//find the customer with the give id and edit\r\n\t\tconsole.log(id);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tlet currentId = doc.id;\r\n\t\t\t\tlet appObj = { ...doc.data(), ['_id']: currentId };\r\n\t\t\t\tcustomers.push(appObj as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\treturn (\r\n\t\t<Card className=\"pa-2\">\r\n\t\t\t<Card.Header>\r\n\t\t\t\t<span>Customers</span>\r\n\t\t\t\t<Accordion>\r\n\t\t\t\t\t<Accordion.Toggle className=\"float-right btn btn-primary m-2\" eventKey=\"0\">\r\n\t\t\t\t\t\tADD\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t<InputGroup className=\"mb-3\">\r\n\t\t\t\t\t\t\t\t<InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t\t<InputGroup.Text>Details</InputGroup.Text>\r\n\t\t\t\t\t\t\t\t</InputGroup.Prepend>\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Customers name..\"\r\n\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Customers Email\"\r\n\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Customers address\"\r\n\t\t\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\ttype=\"tel\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"phone Number\"\r\n\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button className=\"ml-2\" onClick={AddCustomer}>\r\n\t\t\t\t\t\t\t\t\t{loading ? <Spinner animation=\"border\" variant=\"ligth\" /> : <span>Add</span>}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</InputGroup>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Accordion>\r\n\t\t\t</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Table striped bordered hover>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<span className=\"material-icons\">person</span>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<span className=\"material-icons\">email</span>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<span className=\"material-icons\">location</span>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<span className=\"material-icons\">contact_phone</span>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<span className=\"material-icons\">add</span>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<span className=\"material-icons\">delete</span>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{customers.map((customer) => (\r\n\t\t\t\t\t\t\t<tr key={customer.id}>\r\n\t\t\t\t\t\t\t\t<td>{customer.name}</td>\r\n\r\n\t\t\t\t\t\t\t\t<td>{customer.email}</td>\r\n\t\t\t\t\t\t\t\t<td>{customer.address}</td>\r\n\t\t\t\t\t\t\t\t<td>{customer.phone}</td>\r\n\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => handleEdit(customer._id)}>Edit</Button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => handleDelete(customer._id)} className=\"btn-danger\">\r\n\t\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Card.Body>\r\n\t\t\t<ToastContainer></ToastContainer>\r\n\t\t</Card>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}