{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Col, Container, Form, FormGroup, Row } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport AuthGuard from '../components/Authentification';\nimport Pagination from '../components/common/pagination';\nimport { paginate } from '../components/utils/paginate';\nimport CustomersTable from '../components/customersTable';\n\nconst _ = require('lodash');\n\nexport default function Customers() {\n  const {\n    0: customers,\n    1: setCustomers\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: phone,\n    1: setPhone\n  } = useState('');\n  const {\n    0: address,\n    1: setAddress\n  } = useState('');\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(4);\n  const {\n    0: currentPage,\n    1: setCurrentpage\n  } = useState(1);\n  const {\n    0: sortColumns,\n    1: setSortColumn\n  } = useState({\n    path: 'title',\n    order: 'asc'\n  });\n  const router = useRouter();\n  const app = useContext(useFirebase);\n  const firestore = app.firestore();\n\n  const handleDelete = async id => {\n    const deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n    if (deleteConfirm) {\n      //update the state\n      const allCustomers = customers;\n      const filtered = allCustomers.filter(m => m._id !== id);\n      setCustomers(filtered);\n\n      try {\n        await firestore.collection('customers').doc(id).delete();\n      } catch (error) {\n        toast.error('cant perform this operation');\n        setCustomers(allCustomers);\n      } //call the database to delete the customer with the id\n\n\n      toast.success('deleted successfully');\n      console.log(id);\n    }\n  };\n\n  const handleEdit = customer => {\n    setName(customer.name);\n    setEmail(customer.email);\n    setPhone(customer.phone);\n    setAddress(customer.address);\n    setId(customer._id);\n  };\n\n  const handlePageChange = page => {\n    setCurrentpage(page);\n  };\n\n  const handleSort = path => {\n    const sortColumn = _objectSpread({}, sortColumns);\n\n    if (sortColumn.path === path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';else {\n      sortColumn.path = path;\n      sortColumn.order = 'asc';\n    }\n    setSortColumn(sortColumn);\n  };\n\n  const handleUpdate = id => {\n    if (name.length < 5 || email.length < 5) return toast.error('Name and Email must be greater than 5 character');\n    if (address.length < 5 || phone.length < 5) return toast.error('Address and Phone number must be greater than 5 characters');\n    console.log(id);\n  };\n\n  useEffect(() => {\n    async function getCustomers() {\n      const citiesRef = firestore.collection('customers');\n      const snapshot = await citiesRef.get();\n      const customers = [];\n      snapshot.forEach(doc => {\n        let currentId = doc.id;\n\n        let appObj = _objectSpread(_objectSpread({}, doc.data()), {}, {\n          ['_id']: currentId\n        });\n\n        customers.push(appObj);\n        console.log(customers);\n      });\n      setCustomers(customers);\n    }\n\n    getCustomers();\n  }, []);\n\n  const sorted = _.orderBy(customers, [sortColumns.path], [sortColumns.order]);\n\n  const paginatedCustomers = paginate(sorted, currentPage, pageSize);\n  return __jsx(AuthGuard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    className: \"pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, __jsx(Col, {\n    lg: 4,\n    className: \"float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    className: \"pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Edit Customers\")), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 8\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Name\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"name...\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Email\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"email...\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Address\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"address...\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 10\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Phone\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"contact...\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 10\n    }\n  }, __jsx(Button, {\n    className: \"btn-secondary\",\n    onClick: () => handleUpdate(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, \"Update\")))))), __jsx(Col, {\n    lg: 8,\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 6\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 8\n    }\n  }, \"Customers\", __jsx(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => router.push('/customersForm'),\n    className: \"btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }\n  }, \"Add\"))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 8\n    }\n  }, __jsx(CustomersTable, {\n    customersPaginate: paginatedCustomers,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    onSort: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }), __jsx(Pagination, {\n    itemsCount: customers.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    onPageChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  })), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 8\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Button","Card","Col","Container","Form","FormGroup","Row","useFirebase","useRouter","toast","ToastContainer","AuthGuard","Pagination","paginate","CustomersTable","_","require","Customers","customers","setCustomers","name","setName","email","setEmail","phone","setPhone","address","setAddress","id","setId","pageSize","setPageSize","currentPage","setCurrentpage","sortColumns","setSortColumn","path","order","router","app","firestore","handleDelete","deleteConfirm","confirm","allCustomers","filtered","filter","m","_id","collection","doc","delete","error","success","console","log","handleEdit","customer","handlePageChange","page","handleSort","sortColumn","handleUpdate","length","getCustomers","citiesRef","snapshot","get","forEach","currentId","appObj","data","push","sorted","orderBy","paginatedCustomers","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tCol,\r\n\tContainer,\r\n\tForm,\r\n\tFormControl,\r\n\tFormGroup,\r\n\tInputGroup,\r\n\tRow,\r\n\tSpinner,\r\n\tTable,\r\n} from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport AuthGuard from '../components/Authentification';\r\nimport Pagination from '../components/common/pagination';\r\nimport { paginate } from '../components/utils/paginate';\r\nimport CustomersTable from '../components/customersTable';\r\nconst _ = require('lodash');\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: any;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [name, setName] = useState('');\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [phone, setPhone] = useState('');\r\n\tconst [address, setAddress] = useState('');\r\n\tconst [id, setId] = useState('');\r\n\tconst [pageSize, setPageSize] = useState(4);\r\n\tconst [currentPage, setCurrentpage] = useState(1);\r\n\tconst [sortColumns, setSortColumn] = useState({ path: 'title', order: 'asc' });\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m._id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (customer: Customers) => {\r\n\t\tsetName(customer.name);\r\n\t\tsetEmail(customer.email);\r\n\t\tsetPhone(customer.phone);\r\n\t\tsetAddress(customer.address);\r\n\t\tsetId(customer._id);\r\n\t};\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetCurrentpage(page);\r\n\t};\r\n\tconst handleSort = (path: string) => {\r\n\t\tconst sortColumn = { ...sortColumns };\r\n\t\tif (sortColumn.path === path) sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\r\n\t\telse {\r\n\t\t\tsortColumn.path = path;\r\n\t\t\tsortColumn.order = 'asc';\r\n\t\t}\r\n\t\tsetSortColumn(sortColumn);\r\n\t};\r\n\tconst handleUpdate = (id: string) => {\r\n\t\tif (name.length < 5 || email.length < 5) return toast.error('Name and Email must be greater than 5 character');\r\n\t\tif (address.length < 5 || phone.length < 5)\r\n\t\t\treturn toast.error('Address and Phone number must be greater than 5 characters');\r\n\t\tconsole.log(id);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tlet currentId = doc.id;\r\n\t\t\t\tlet appObj = { ...doc.data(), ['_id']: currentId };\r\n\t\t\t\tcustomers.push(appObj as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\r\n\tconst sorted = _.orderBy(customers, [sortColumns.path], [sortColumns.order]);\r\n\tconst paginatedCustomers = paginate(sorted, currentPage, pageSize);\r\n\treturn (\r\n\t\t<AuthGuard>\r\n\t\t\t<Container className=\"pl-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg={4} className=\"float-left\">\r\n\t\t\t\t\t\t<Card className=\"pr-1\">\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\t<h5>Edit Customers</h5>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"email...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Address</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"address...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setAddress(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Phone</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"contact...\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t></Form.Control>\r\n\t\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"btn-secondary\" onClick={() => handleUpdate(id)}>\r\n\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg={8} className=\"float-right\">\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\t\t\tCustomers\r\n\t\t\t\t\t\t\t\t<span className=\"float-right\">\r\n\t\t\t\t\t\t\t\t\t<Button onClick={() => router.push('/customersForm')} className=\"btn-info\">\r\n\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<CustomersTable\r\n\t\t\t\t\t\t\t\t\tcustomersPaginate={paginatedCustomers}\r\n\t\t\t\t\t\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\t\t\t\t\t\tonEdit={handleEdit}\r\n\t\t\t\t\t\t\t\t\tonSort={handleSort}\r\n\t\t\t\t\t\t\t\t></CustomersTable>\r\n\t\t\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\t\t\titemsCount={customers.length}\r\n\t\t\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t\t\t></Pagination>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<ToastContainer></ToastContainer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</AuthGuard>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}