{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\customers.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Button, Card, Container } from 'react-bootstrap';\nimport useFirebase from '../components/useFirebase';\nimport { useRouter } from 'next/router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport AuthGuard from '../components/Authentification';\nimport Pagination from '../components/common/pagination';\nimport { paginate } from '../components/utils/paginate';\nimport CustomersTable from '../components/customersTable';\nexport default function Customers() {\n  _s();\n\n  var _useState = useState([]),\n      customers = _useState[0],\n      setCustomers = _useState[1];\n\n  var _useState2 = useState(4),\n      pageSize = _useState2[0],\n      setPageSize = _useState2[1];\n\n  var _useState3 = useState(1),\n      currentPage = _useState3[0],\n      setCurrentpage = _useState3[1];\n\n  var router = useRouter();\n  var app = useContext(useFirebase);\n  var firestore = app.firestore();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var deleteConfirm, allCustomers, filtered;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              deleteConfirm = confirm('Are you sure you ant to delete this document?');\n\n              if (!deleteConfirm) {\n                _context.next = 16;\n                break;\n              }\n\n              //update the state\n              allCustomers = customers;\n              filtered = allCustomers.filter(function (m) {\n                return m._id !== id;\n              });\n              setCustomers(filtered);\n              _context.prev = 5;\n              _context.next = 8;\n              return firestore.collection('customers').doc(id)[\"delete\"]();\n\n            case 8:\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](5);\n              toast.error('cant perform this operation');\n              setCustomers(allCustomers);\n\n            case 14:\n              //call the database to delete the customer with the id\n              toast.success('deleted successfully');\n              console.log(id);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 10]]);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleEdit = function handleEdit(id) {\n    // router.push(`customersForm/${id}`);\n    //find the customer with the give id and edit\n    console.log(id);\n  };\n\n  var handlePageChange = function handlePageChange(page) {\n    setCurrentpage(page);\n  };\n\n  useEffect(function () {\n    function getCustomers() {\n      return _getCustomers.apply(this, arguments);\n    }\n\n    function _getCustomers() {\n      _getCustomers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var citiesRef, snapshot, customers;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                citiesRef = firestore.collection('customers');\n                _context2.next = 3;\n                return citiesRef.get();\n\n              case 3:\n                snapshot = _context2.sent;\n                customers = [];\n                snapshot.forEach(function (doc) {\n                  var currentId = doc.id;\n\n                  var appObj = _objectSpread(_objectSpread({}, doc.data()), {}, _defineProperty({}, '_id', currentId));\n\n                  customers.push(appObj);\n                  console.log(customers);\n                });\n                setCustomers(customers);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _getCustomers.apply(this, arguments);\n    }\n\n    getCustomers();\n  }, []);\n  var customersPaginate = paginate(customers, currentPage, pageSize);\n  return __jsx(AuthGuard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 6\n    }\n  }, \"Customers\", __jsx(\"span\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      return router.push('/customersForm');\n    },\n    className: \"btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }\n  }, \"Add\"))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, __jsx(CustomersTable, {\n    customersPaginate: customersPaginate,\n    onDelete: handleDelete,\n    onEdit: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    itemsCount: customers.length,\n    currentPage: currentPage,\n    pageSize: pageSize,\n    onPageChange: handlePageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  })), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }))));\n}\n\n_s(Customers, \"PRXX1T2Ry9K9VAs0O7eyotazY7w=\", false, function () {\n  return [useRouter];\n});\n\n_c = Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/customers.tsx"],"names":["React","useState","useEffect","useContext","Button","Card","Container","useFirebase","useRouter","toast","ToastContainer","AuthGuard","Pagination","paginate","CustomersTable","Customers","customers","setCustomers","pageSize","setPageSize","currentPage","setCurrentpage","router","app","firestore","handleDelete","id","deleteConfirm","confirm","allCustomers","filtered","filter","m","_id","collection","doc","error","success","console","log","handleEdit","handlePageChange","page","getCustomers","citiesRef","get","snapshot","forEach","currentId","appObj","data","push","customersPaginate","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Accordion, Button, Card, Container, FormControl, InputGroup, Spinner, Table } from 'react-bootstrap';\r\nimport useFirebase from '../components/useFirebase';\r\nimport { useRouter } from 'next/router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport AuthGuard from '../components/Authentification';\r\nimport Pagination from '../components/common/pagination';\r\nimport { paginate } from '../components/utils/paginate';\r\nimport CustomersTable from '../components/customersTable';\r\n\r\nexport interface Customers {\r\n\tid: string;\r\n\tname: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tphone: string;\r\n\ttype: 'Roaster' | 'One-off';\r\n\t_id?: any;\r\n}\r\n\r\nexport default function Customers(): JSX.Element {\r\n\tconst [customers, setCustomers] = useState<Array<Customers>>([]);\r\n\tconst [pageSize, setPageSize] = useState(4);\r\n\tconst [currentPage, setCurrentpage] = useState(1);\r\n\tconst router = useRouter();\r\n\tconst app = useContext(useFirebase);\r\n\tconst firestore = app.firestore();\r\n\r\n\tconst handleDelete = async (id: string) => {\r\n\t\tconst deleteConfirm = confirm('Are you sure you ant to delete this document?');\r\n\t\tif (deleteConfirm) {\r\n\t\t\t//update the state\r\n\t\t\tconst allCustomers = customers;\r\n\t\t\tconst filtered = allCustomers.filter((m) => m._id !== id);\r\n\t\t\tsetCustomers(filtered);\r\n\t\t\ttry {\r\n\t\t\t\tawait firestore.collection('customers').doc(id).delete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttoast.error('cant perform this operation');\r\n\t\t\t\tsetCustomers(allCustomers);\r\n\t\t\t}\r\n\r\n\t\t\t//call the database to delete the customer with the id\r\n\r\n\t\t\ttoast.success('deleted successfully');\r\n\t\t\tconsole.log(id);\r\n\t\t}\r\n\t};\r\n\tconst handleEdit = (id: string) => {\r\n\t\t// router.push(`customersForm/${id}`);\r\n\t\t//find the customer with the give id and edit\r\n\t\tconsole.log(id);\r\n\t};\r\n\tconst handlePageChange = (page: number) => {\r\n\t\tsetCurrentpage(page);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tasync function getCustomers() {\r\n\t\t\tconst citiesRef = firestore.collection('customers');\r\n\t\t\tconst snapshot = await citiesRef.get();\r\n\r\n\t\t\tconst customers: Array<Customers> = [];\r\n\r\n\t\t\tsnapshot.forEach((doc) => {\r\n\t\t\t\tlet currentId = doc.id;\r\n\t\t\t\tlet appObj = { ...doc.data(), ['_id']: currentId };\r\n\t\t\t\tcustomers.push(appObj as Customers);\r\n\t\t\t\tconsole.log(customers);\r\n\t\t\t});\r\n\r\n\t\t\tsetCustomers(customers);\r\n\t\t}\r\n\t\tgetCustomers();\r\n\t}, []);\r\n\tconst customersPaginate = paginate(customers, currentPage, pageSize);\r\n\treturn (\r\n\t\t<AuthGuard>\r\n\t\t\t<Container>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Card.Header>\r\n\t\t\t\t\t\tCustomers\r\n\t\t\t\t\t\t<span className=\"float-right\">\r\n\t\t\t\t\t\t\t<Button onClick={() => router.push('/customersForm')} className=\"btn-info\">\r\n\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Card.Header>\r\n\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<CustomersTable\r\n\t\t\t\t\t\t\tcustomersPaginate={customersPaginate}\r\n\t\t\t\t\t\t\tonDelete={handleDelete}\r\n\t\t\t\t\t\t\tonEdit={handleEdit}\r\n\t\t\t\t\t\t></CustomersTable>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\titemsCount={customers.length}\r\n\t\t\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\t\t\tpageSize={pageSize}\r\n\t\t\t\t\t\t\tonPageChange={handlePageChange}\r\n\t\t\t\t\t\t></Pagination>\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t<ToastContainer></ToastContainer>\r\n\t\t\t\t</Card>\r\n\t\t\t</Container>\r\n\t\t</AuthGuard>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}