{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\typescript\\\\my-app\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button, Form } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport useFirebase from '../components/useFirebase';\nexport default function Home() {\n  const authentification = useContext(useFirebase);\n  const app = authentification.auth();\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const router = useRouter();\n  const inputRef = useRef(null);\n  useEffect(() => {//focus the input element on pageLoad\n    // inputRef.current.focus();\n  }, []);\n\n  const handleSubmit = async () => {\n    if (email.length < 8) return toast.error('please enter a valid email, must be min 8 xters...');\n    if (password.length < 5) return toast.error('please enter a valid password');\n    setLoading(true);\n\n    try {\n      const res = await app.signInWithEmailAndPassword(email, password);\n      toast.success('Signed in successfully');\n      router.push('/welcome');\n    } catch (error) {\n      return toast.error('failed to login');\n      setLoading(false);\n    }\n\n    setLoading(false);\n  };\n\n  return __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, \"Sign In\"), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Email address\"), __jsx(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  })), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"password\"), __jsx(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter passowrd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  })), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["C:/Users/USER/Desktop/typescript/my-app/pages/index.tsx"],"names":["React","useContext","useState","useRef","useEffect","useRouter","Button","Form","toast","useFirebase","Home","authentification","app","auth","email","setEmail","password","setPassword","loading","setLoading","router","inputRef","handleSubmit","length","error","res","signInWithEmailAndPassword","success","push"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Button, Card, Col, Container, Form, Row, Spinner } from 'react-bootstrap';\nimport { toast, ToastContainer } from 'react-toastify';\nimport useFirebase from '../components/useFirebase';\nimport styles from '../styles/cardHeader.module.scss';\n\nexport default function Home(): JSX.Element {\n\tconst authentification = useContext(useFirebase);\n\tconst app = authentification.auth();\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [loading, setLoading] = useState(false);\n\tconst router = useRouter();\n\tconst inputRef = useRef(null);\n\n\tuseEffect(() => {\n\t\t//focus the input element on pageLoad\n\t\t// inputRef.current.focus();\n\t}, []);\n\n\tconst handleSubmit = async () => {\n\t\tif (email.length < 8) return toast.error('please enter a valid email, must be min 8 xters...');\n\t\tif (password.length < 5) return toast.error('please enter a valid password');\n\t\tsetLoading(true);\n\t\ttry {\n\t\t\tconst res = await app.signInWithEmailAndPassword(email, password);\n\t\t\ttoast.success('Signed in successfully');\n\n\t\t\trouter.push('/welcome');\n\t\t} catch (error) {\n\t\t\treturn toast.error('failed to login');\n\t\t\tsetLoading(false);\n\t\t}\n\t\tsetLoading(false);\n\t};\n\treturn (\n\t\t<Form>\n\t\t\t<h3>Sign In</h3>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t<Form.Control type=\"email\" placeholder=\"Enter email\"></Form.Control>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Form.Label>password</Form.Label>\n\t\t\t\t<Form.Control type=\"password\" placeholder=\"Enter passowrd\"></Form.Control>\n\t\t\t</Form.Group>\n\t\t\t<Form.Group>\n\t\t\t\t<Button type=\"submit\" variant=\"primary\">\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form.Group>\n\t\t</Form>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}